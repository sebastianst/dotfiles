. ~/.rclib

# From https://wiki.archlinux.org/index.php/Bash#Aliases
# modified commands
alias diff='colordiff'              # requires colordiff package
alias grep='grep --color=auto'
alias more='less'
alias df='df -hk'
alias du='du -c -hk'
alias mkdir='mkdir -p -v'
alias nano='nano -w'
alias ping='ping -c 5'
alias ..='cd ..'

# new commands
alias da='date "+%A, %B %d, %Y [%T]"'
alias du1='du --max-depth=1'
alias hist='history | grep $1'      # requires an argument
alias openports='netstat --all --numeric --programs --inet --inet6'
alias pg='ps -Af | grep $1'         # requires an argument (note: /usr/bin/pg is installed by the util-linux package; maybe a different alias name should be used)
alias gpg-reload-agent='echo RELOADAGENT | gpg-connect-agent'

# lazyness
alias xopen='xdg-open'
alias zstar='tar -I zstd' # Until zstd is added to tar compression options
alias vpnchromium="sudo vpnns run sudo -u $USER /usr/bin/chromium"

# privileged access
if [ $UID -ne 0 ]; then
    alias sudo='sudo '
    alias scat='sudo cat'
    alias root='sudo su'
    alias reboot='sudo reboot'
    alias halt='sudo halt'
    alias netcfg='sudo netcfg2'
fi

# safety features
alias rm='rm -I'                    # 'rm -i' prompts for every file
if is-linux; then
    alias chown='chown --preserve-root'
    alias chmod='chmod --preserve-root'
    alias chgrp='chgrp --preserve-root'
fi

alias xselc='xsel --clipboard'
alias listify='xselc | xargs | tr " " , | tr -d "\n" | xselc'
# rsync preserving only modification time (no perms, user, group or links)
alias rsync.backup='rsync -rt --info=progress2'
alias rsync.progress='rsync -a --info=progress2'
alias rsync.skip-by-size='rsync -a --info=progress2 --size-only'
alias spotify-open='qdbus org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.OpenUri'
# quickly edit config files
alias vimrc="${VISUAL} ~/.vimrc"
alias i3c="${VISUAL} ~/.config/i3/config"
alias e.="(cd ~/.dotfiles; ${VISUAL} \$(git ls-tree -r master --name-only | fzf))"

# improve git-branchless undo
exists git-branchless && alias git='git-branchless wrap --' || true

# git aliases - extension to zim's
alias gcom='git checkout main'
alias gcod='git checkout develop'
alias gwtl='git worktree list'
alias gwta='git worktree add --detach'
__git_sync_delete() {
  cb=$(git-branch-current)
  echo "Current branch: ${cb}"
  tbs=("$@")
  for tb in "${tbs[@]}"; do
    git show-ref --verify --quiet refs/heads/$tb && mb=$tb
  done
  [[ -z $mb ]] && echo "No ${@} branch found." && return
  echo "Main branch: ${mb}"
  [[ $cb == $mb ]] && echo "$mb already checked out" && return
  git fetch && git fetch origin $mb:$mb && git checkout $mb && git branch -d $cb
}
alias gcoM="__git_sync_delete master main"
alias gcoD="__git_sync_delete develop"
alias gcoO="__git_sync_delete optimism"

gsync() {
  echo "Syncing branch ${1} from origin"
  git fetch origin && git fetch origin ${1}:${1}
}

# ------------
# `gh` aliases (original source: https://github.com/clabby/dots/blob/main/.zshrc)
# ------------

__gh_prselect() {
  GH_FORCE_TTY=100% gh pr list ${@} | fzf --ansi --preview 'GH_FORCE_TTY=100% gh pr view {1}' --preview-window down --header-lines 3 | cut -d' ' -f1 | tr -d '#'
}

# Search through all PRs that are open in the current repo and check the selected one out locally.
alias prc='__gh_prselect -L 1000 | xargs gh pr checkout'

# Search through all PRs that are open in the current repo and open the selected one in browser.
alias prv='__gh_prselect -L 1000 | xargs gh pr view -w'

# Search through all PRs that are open in the current repo and that I'm requested to review and
# open the selected one in browser.
alias prr='__gh_prselect --search user-review-requested:@me | xargs gh pr view -w'

CLI_ISSUES="ethereum-optimism/client-pod"
# Search through all open client-pod issues and open the selected one in browser.
alias oi="GH_FORCE_TTY=100% gh issue list -R $CLI_ISSUES -L 1000 | fzf --ansi --preview 'GH_FORCE_TTY=100% gh issue -R $CLI_ISSUES view {1}' --preview-window down --header-lines 3 | cut -d' ' -f1 | tr -d '#' | xargs gh issue -R $CLI_ISSUES view -w"
# Search through all open client-pod issues assigned to me and open the selected one in browser.
alias om="GH_FORCE_TTY=100% gh issue list -R $CLI_ISSUES -L 1000 --search 'assignee:@me' | fzf --ansi --preview 'GH_FORCE_TTY=100% gh issue -R $CLI_ISSUES view {1}' --preview-window down --header-lines 3 | cut -d' ' -f1 | tr -d '#' | xargs gh issue -R $CLI_ISSUES view -w"

# force-pull currently checked out PR
alias prpf='gh pr checkout --force $(gh pr view --json number -q .number)'

exists kubectl && alias k=kubectl || true

# Arch aliases
alias makesrcinfo='rm .SRCINFO; makepkg --printsrcinfo > .SRCINFO'

# mlocate aliases
alias hlocate='locate -i -d ~/.mlocate.db'

olocate () {
  file="$(hlocate $@|fzf)"
  [ -z "${file}" ] || xdg-open "${file}"
}

# Python
# from https://www.fusionbox.com/blog/detail/navigating-your-django-project-with-vim-and-ctags/590/
ctags-python() {
  ctags -R --fields=+l --languages=python --python-kinds=-iv -f ./tags $(python -c "import os, sys; print(' '.join('{}'.format(d) for d in sys.path if os.path.isdir(d)))")
}

[[ -s ~/.aliases.local ]] && source ~/.aliases.local
# cbs aliases (global)
alias biodata0='ssh stammler@biodata0.compbiol.bio.tu-darmstadt.de'

# functions that feel like aliases
# cd and list
cl() {
  cd ${1}; l
}
# ssh followd by tmux attach || new
stmux () {
  /usr/bin/ssh -t $@ "tmux attach || tmux new";
}
# convert svg to pdf
svg2pdf () {
  rsvg-convert -f pdf -o ${2} ${1}
}

mount/ () {
  mount $@ | grep '^[a-zA-Z0-9:.]*/' | awk -v on1="$(tput setaf 1)" -v on3="$(tput setaf 2)" -v off="$(tput setaf 0)" '{ print on1 $1, on3 $3, off $5, $6 }' | column -t
}
